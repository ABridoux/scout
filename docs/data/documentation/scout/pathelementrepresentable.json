{"hierarchy":{"paths":[["doc:\/\/Scout\/documentation\/Scout"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PathElementRepresentable","kind":"identifier"}]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"As "},{"type":"codeVoice","code":"PathElement"},{"type":"text","text":" already conforms to "},{"type":"codeVoice","code":"ExpressibleByStringLiteral"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ExpressibleByIntegerLiteral"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"it is possible to instantiate a Path without the need of using the "},{"type":"codeVoice","code":"PathElementRepresentable"},{"text":" protocol:","type":"text"}],"type":"paragraph"},{"code":["let path: Path = [\"people\", \"Tom\", \"hobbies\", 1]"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"But the “Expressible” protocols do not allow to do the same with variables."},{"type":"text","text":" "},{"type":"text","text":"Thus, using "},{"code":"PathElementRepresentable","type":"codeVoice"},{"text":" allows to instantiate a Path from a mix of Strings and Integers variables:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let tom = \"Tom\"","let hobbies = \"hobbies\"","let index = 1","let path: Path = [tom, hobbies, index]"],"syntax":"swift"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"This only works for keys and indexes. When dealing with other elements like ","type":"text"},{"type":"codeVoice","code":".count"},{"type":"text","text":" or "},{"type":"codeVoice","code":".slice"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"it’s required to use the full name "},{"type":"codeVoice","code":"PathElement.count"},{"text":", ","type":"text"},{"type":"codeVoice","code":"PathElement.slice"},{"type":"text","text":". Otherwise,"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Path.init(element:)","type":"codeVoice"},{"text":" works with ","type":"text"},{"code":"PathElement","type":"codeVoice"},{"type":"text","text":" directly although the possibility to use variables"},{"text":" ","type":"text"},{"type":"text","text":"without the "},{"code":"PathElement","type":"codeVoice"},{"type":"text","text":" specification becomes unavailable."}]}],"name":"Note","type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/scout\/pathelementrepresentable"]}],"topicSections":[{"identifiers":["doc:\/\/Scout\/documentation\/Scout\/PathElementRepresentable\/pathValue"],"title":"Instance Properties"}],"relationshipsSections":[{"title":"Conforming Types","kind":"relationships","identifiers":["doc:\/\/Scout\/documentation\/Scout\/PathElement"],"type":"conformingTypes"}],"identifier":{"url":"doc:\/\/Scout\/documentation\/Scout\/PathElementRepresentable","interfaceLanguage":"swift"},"sections":[],"metadata":{"symbolKind":"protocol","modules":[{"name":"Scout"}],"title":"PathElementRepresentable","navigatorTitle":[{"text":"PathElementRepresentable","kind":"identifier"}],"externalID":"s:5Scout24PathElementRepresentableP","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PathElementRepresentable","kind":"identifier"}],"roleHeading":"Protocol"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Protocol to allow to subscript a "},{"type":"codeVoice","code":"PathExplorer"},{"type":"text","text":" without using directly the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement"},{"text":" enum.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/Scout\/documentation\/Scout\/mastering-paths","doc:\/\/Scout\/documentation\/Scout\/paths-listing","doc:\/\/Scout\/documentation\/Scout\/Path","doc:\/\/Scout\/documentation\/Scout\/PathElement","doc:\/\/Scout\/documentation\/Scout\/PathsFilter","doc:\/\/Scout\/documentation\/Scout\/ValuePredicate","doc:\/\/Scout\/documentation\/Scout\/Bounds"],"generated":true,"title":"Manipulate paths"}],"references":{"doc://Scout/documentation/Scout/PathElement":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathElement","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"The possible elements that can be used to subscript a ","type":"text"},{"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer","type":"reference","isActive":true}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement","title":"PathElement","type":"topic","navigatorTitle":[{"text":"PathElement","kind":"identifier"}],"url":"\/documentation\/scout\/pathelement"},"doc://Scout/documentation/Scout/PathElementRepresentable/pathValue":{"type":"topic","url":"\/documentation\/scout\/pathelementrepresentable\/pathvalue","abstract":[],"role":"symbol","kind":"symbol","required":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElementRepresentable\/pathValue","title":"pathValue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"pathValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Scout11PathElementO","text":"PathElement","kind":"typeIdentifier"}]},"doc://Scout/documentation/Scout/PathElementRepresentable":{"abstract":[{"text":"Protocol to allow to subscript a ","type":"text"},{"type":"codeVoice","code":"PathExplorer"},{"text":" without using directly the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement"},{"text":" enum.","type":"text"}],"type":"topic","url":"\/documentation\/scout\/pathelementrepresentable","role":"symbol","kind":"symbol","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElementRepresentable","title":"PathElementRepresentable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PathElementRepresentable"}],"navigatorTitle":[{"text":"PathElementRepresentable","kind":"identifier"}]},"doc://Scout/documentation/Scout/mastering-paths":{"type":"topic","url":"\/documentation\/scout\/mastering-paths","abstract":[{"identifier":"doc:\/\/Scout\/documentation\/Scout\/Path","type":"reference","isActive":true},{"type":"text","text":"s are provided to a "},{"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer","isActive":true,"type":"reference"},{"text":" to navigate through or manipulate data precisely.","type":"text"}],"role":"article","kind":"article","identifier":"doc:\/\/Scout\/documentation\/Scout\/mastering-paths","title":"Mastering Paths"},"doc://Scout/documentation/Scout/PathExplorer/listPaths(startingAt:filter:)-4tkeq":{"abstract":[{"text":"Returns all the paths leading to single or group values","type":"text"}],"type":"topic","url":"\/documentation\/scout\/pathexplorer\/listpaths(startingat:filter:)-4tkeq","role":"symbol","kind":"symbol","required":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer\/listPaths(startingAt:filter:)-4tkeq","title":"listPaths(startingAt:filter:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"listPaths","kind":"identifier"},{"kind":"text","text":"("},{"text":"startingAt","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Scout4PathV","text":"Path"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"filter"},{"kind":"text","text":": "},{"text":"PathsFilter","kind":"typeIdentifier","preciseIdentifier":"s:5Scout11PathsFilterO"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:5Scout4PathV","text":"Path"},{"kind":"text","text":"]"}],"defaultImplementations":1},"doc://Scout/documentation/Scout/PathsFilter":{"type":"topic","url":"\/documentation\/scout\/pathsfilter","abstract":[{"text":"Provided to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer\/listPaths(startingAt:filter:)-4tkeq","isActive":true},{"type":"text","text":" function to target specific paths when listing them."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathsFilter","title":"PathsFilter","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PathsFilter","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"PathsFilter"}]},"doc://Scout/documentation/Scout/Bounds":{"abstract":[{"type":"text","text":"Lower and upper bounds to be used to slice an array"}],"type":"topic","url":"\/documentation\/scout\/bounds","role":"symbol","kind":"symbol","identifier":"doc:\/\/Scout\/documentation\/Scout\/Bounds","title":"Bounds","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Bounds"}],"navigatorTitle":[{"kind":"identifier","text":"Bounds"}]},"doc://Scout/documentation/Scout/PathExplorer":{"title":"PathExplorer","kind":"symbol","abstract":[{"type":"text","text":"Wrap several structs to explore several format: Json, Plist, YAML and Xml"}],"type":"topic","url":"\/documentation\/scout\/pathexplorer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PathExplorer"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathExplorer","kind":"identifier"}]},"doc://Scout/documentation/Scout/paths-listing":{"type":"topic","identifier":"doc:\/\/Scout\/documentation\/Scout\/paths-listing","url":"\/documentation\/scout\/paths-listing","role":"article","kind":"article","title":"Paths listing","abstract":[{"code":"PathExplorer","type":"codeVoice"},{"text":" list path features is useful to get all paths leading to a value or a key.","type":"text"}]},"doc://Scout/documentation/Scout":{"abstract":[{"type":"text","text":"This library aims to make specific formats data values reading and writing simple when the data format is not known at build time."}],"identifier":"doc:\/\/Scout\/documentation\/Scout","url":"\/documentation\/scout","type":"topic","role":"collection","title":"Scout","kind":"symbol"},"doc://Scout/documentation/Scout/ValuePredicate":{"abstract":[{"text":"Expression or function to evaluate a value","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValuePredicate"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValuePredicate"}],"title":"ValuePredicate","kind":"symbol","identifier":"doc:\/\/Scout\/documentation\/Scout\/ValuePredicate","url":"\/documentation\/scout\/valuepredicate","role":"symbol"},"doc://Scout/documentation/Scout/Path":{"navigatorTitle":[{"text":"Path","kind":"identifier"}],"abstract":[{"type":"text","text":"Collection of "},{"isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement","type":"reference"},{"type":"text","text":"s to subscript a "},{"type":"codeVoice","code":"PathExplorer"}],"type":"topic","identifier":"doc:\/\/Scout\/documentation\/Scout\/Path","kind":"symbol","title":"Path","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Path"}],"url":"\/documentation\/scout\/path","role":"symbol"}}}