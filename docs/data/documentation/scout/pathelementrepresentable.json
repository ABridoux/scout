{"seeAlsoSections":[{"title":"Manipulate paths","identifiers":["doc:\/\/Scout\/documentation\/Scout\/mastering-paths","doc:\/\/Scout\/documentation\/Scout\/paths-listing","doc:\/\/Scout\/documentation\/Scout\/Path","doc:\/\/Scout\/documentation\/Scout\/PathElement","doc:\/\/Scout\/documentation\/Scout\/PathsFilter","doc:\/\/Scout\/documentation\/Scout\/ValuePredicate","doc:\/\/Scout\/documentation\/Scout\/Bounds"],"generated":true}],"schemaVersion":{"major":0,"minor":2,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathElementRepresentable"}],"title":"PathElementRepresentable","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:5Scout24PathElementRepresentableP","modules":[{"name":"Scout"}],"navigatorTitle":[{"kind":"identifier","text":"PathElementRepresentable"}]},"abstract":[{"type":"text","text":"Protocol to allow to subscript a "},{"type":"codeVoice","code":"PathExplorer"},{"type":"text","text":" without using directly the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement"},{"type":"text","text":" enum."}],"sections":[],"identifier":{"url":"doc:\/\/Scout\/documentation\/Scout\/PathElementRepresentable","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/Scout\/documentation\/Scout\/PathElement"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"hierarchy":{"paths":[["doc:\/\/Scout\/documentation\/Scout"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Scout\/documentation\/Scout\/PathElementRepresentable\/pathValue"]}],"variants":[{"paths":["\/documentation\/scout\/pathelementrepresentable"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathElementRepresentable"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As "},{"type":"codeVoice","code":"PathElement"},{"type":"text","text":" already conforms to "},{"type":"codeVoice","code":"ExpressibleByStringLiteral"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ExpressibleByIntegerLiteral"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"it is possible to instantiate a Path without the need of using the "},{"type":"codeVoice","code":"PathElementRepresentable"},{"type":"text","text":" protocol:"}]},{"type":"codeListing","syntax":null,"code":["let path: Path = [\"people\", \"Tom\", \"hobbies\", 1]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"But the “Expressible” protocols do not allow to do the same with variables."},{"type":"text","text":" "},{"type":"text","text":"Thus, using "},{"type":"codeVoice","code":"PathElementRepresentable"},{"type":"text","text":" allows to instantiate a Path from a mix of Strings and Integers variables:"}]},{"type":"codeListing","syntax":"swift","code":["let tom = \"Tom\"","let hobbies = \"hobbies\"","let index = 1","let path: Path = [tom, hobbies, index]"]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This only works for keys and indexes. When dealing with other elements like "},{"type":"codeVoice","code":".count"},{"type":"text","text":" or "},{"type":"codeVoice","code":".slice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"it’s required to use the full name "},{"type":"codeVoice","code":"PathElement.count"},{"type":"text","text":", "},{"type":"codeVoice","code":"PathElement.slice"},{"type":"text","text":". Otherwise,"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Path.init(element:)"},{"type":"text","text":" works with "},{"type":"codeVoice","code":"PathElement"},{"type":"text","text":" directly although the possibility to use variables"},{"type":"text","text":" "},{"type":"text","text":"without the "},{"type":"codeVoice","code":"PathElement"},{"type":"text","text":" specification becomes unavailable."}]}]}]}],"references":{"doc://Scout/documentation/Scout/PathElementRepresentable/pathValue":{"role":"symbol","title":"pathValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"pathValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PathElement","preciseIdentifier":"s:5Scout11PathElementO"}],"abstract":[],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElementRepresentable\/pathValue","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/scout\/pathelementrepresentable\/pathvalue"},"doc://Scout/documentation/Scout/Path":{"role":"symbol","title":"Path","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Path"}],"abstract":[{"type":"text","text":"Collection of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement"},{"type":"text","text":"s to subscript a "},{"type":"codeVoice","code":"PathExplorer"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/Path","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Path"}],"url":"\/documentation\/scout\/path"},"doc://Scout/documentation/Scout/PathElementRepresentable":{"role":"symbol","title":"PathElementRepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathElementRepresentable"}],"abstract":[{"type":"text","text":"Protocol to allow to subscript a "},{"type":"codeVoice","code":"PathExplorer"},{"type":"text","text":" without using directly the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement"},{"type":"text","text":" enum."}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElementRepresentable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PathElementRepresentable"}],"url":"\/documentation\/scout\/pathelementrepresentable"},"doc://Scout/documentation/Scout/Bounds":{"role":"symbol","title":"Bounds","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bounds"}],"abstract":[{"type":"text","text":"Lower and upper bounds to be used to slice an array"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/Bounds","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Bounds"}],"url":"\/documentation\/scout\/bounds"},"doc://Scout/documentation/Scout/ValuePredicate":{"role":"symbol","title":"ValuePredicate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValuePredicate"}],"abstract":[{"type":"text","text":"Expression or function to evaluate a value"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/ValuePredicate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValuePredicate"}],"url":"\/documentation\/scout\/valuepredicate"},"doc://Scout/documentation/Scout/PathsFilter":{"role":"symbol","title":"PathsFilter","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathsFilter"}],"abstract":[{"type":"text","text":"Provided to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer\/listPaths(startingAt:filter:)-4tkeq"},{"type":"text","text":" function to target specific paths when listing them."}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathsFilter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PathsFilter"}],"url":"\/documentation\/scout\/pathsfilter"},"doc://Scout/documentation/Scout/PathExplorer/listPaths(startingAt:filter:)-4tkeq":{"defaultImplementations":1,"role":"symbol","title":"listPaths(startingAt:filter:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"listPaths"},{"kind":"text","text":"("},{"kind":"externalParam","text":"startingAt"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Path","preciseIdentifier":"s:5Scout4PathV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"filter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PathsFilter","preciseIdentifier":"s:5Scout11PathsFilterO"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Path","preciseIdentifier":"s:5Scout4PathV"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Returns all the paths leading to single or group values"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer\/listPaths(startingAt:filter:)-4tkeq","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/scout\/pathexplorer\/listpaths(startingat:filter:)-4tkeq"},"doc://Scout/documentation/Scout/PathElement":{"role":"symbol","title":"PathElement","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathElement"}],"abstract":[{"type":"text","text":"The possible elements that can be used to subscript a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PathElement"}],"url":"\/documentation\/scout\/pathelement"},"doc://Scout/documentation/Scout":{"role":"collection","title":"Scout","abstract":[{"type":"text","text":"This library aims to make specific formats data values reading and writing simple when the data format is not known at build time."}],"identifier":"doc:\/\/Scout\/documentation\/Scout","kind":"symbol","type":"topic","url":"\/documentation\/scout"},"doc://Scout/documentation/Scout/PathExplorer":{"role":"symbol","title":"PathExplorer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathExplorer"}],"abstract":[{"type":"text","text":"Wrap several structs to explore several format: Json, Plist, YAML and Xml"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PathExplorer"}],"url":"\/documentation\/scout\/pathexplorer"},"doc://Scout/documentation/Scout/paths-listing":{"role":"article","title":"Paths listing","abstract":[{"type":"codeVoice","code":"PathExplorer"},{"type":"text","text":" list path features is useful to get all paths leading to a value or a key."}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/paths-listing","kind":"article","type":"topic","url":"\/documentation\/scout\/paths-listing"},"doc://Scout/documentation/Scout/mastering-paths":{"role":"article","title":"Mastering Paths","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/Path"},{"type":"text","text":"s are provided to a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer"},{"type":"text","text":" to navigate through or manipulate data precisely."}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/mastering-paths","kind":"article","type":"topic","url":"\/documentation\/scout\/mastering-paths"}}}