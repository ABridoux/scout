{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/scout\/dataformat\/rawrepresentable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"role":"collectionGroup","title":"RawRepresentable Implementations","modules":[{"name":"Scout"}]},"hierarchy":{"paths":[["doc:\/\/Scout\/documentation\/Scout","doc:\/\/Scout\/documentation\/Scout\/DataFormat"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Scout\/documentation\/Scout\/DataFormat\/RawRepresentable-Implementations"},"kind":"article","topicSections":[{"generated":true,"identifiers":["doc:\/\/Scout\/documentation\/Scout\/DataFormat\/hashValue"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/Scout\/documentation\/Scout\/DataFormat\/hash(into:)"],"generated":true}],"references":{"doc://Scout/documentation/Scout":{"abstract":[{"type":"text","text":"This library aims to make specific formats data values reading and writing simple when the data format is not known at build time."}],"identifier":"doc:\/\/Scout\/documentation\/Scout","url":"\/documentation\/scout","type":"topic","role":"collection","title":"Scout","kind":"symbol"},"doc://Scout/documentation/Scout/DataFormat/hashValue":{"type":"topic","identifier":"doc:\/\/Scout\/documentation\/Scout\/DataFormat\/hashValue","url":"\/documentation\/scout\/dataformat\/hashvalue","abstract":[],"title":"hashValue","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]}},"doc://Scout/documentation/Scout/DataFormat":{"navigatorTitle":[{"kind":"identifier","text":"DataFormat"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataFormat"}],"title":"DataFormat","abstract":[{"type":"text","text":"Unique identifier of a data format"}],"kind":"symbol","url":"\/documentation\/scout\/dataformat","role":"symbol","identifier":"doc:\/\/Scout\/documentation\/Scout\/DataFormat"},"doc://Scout/documentation/Scout/DataFormat/hash(into:)":{"type":"topic","identifier":"doc:\/\/Scout\/documentation\/Scout\/DataFormat\/hash(into:)","url":"\/documentation\/scout\/dataformat\/hash(into:)","abstract":[],"title":"hash(into:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hash","kind":"identifier"},{"kind":"text","text":"("},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier","text":"Hasher"},{"text":")","kind":"text"}],"kind":"symbol","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}