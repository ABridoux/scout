{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Scout\/documentation\/Scout\/Path\/+=(_:_:)"},"hierarchy":{"paths":[["doc:\/\/Scout\/documentation\/Scout","doc:\/\/Scout\/documentation\/Scout\/Path","doc:\/\/Scout\/documentation\/Scout\/Path\/RangeReplaceableCollection-Implementations"]]},"sections":[],"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"+=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Other"},{"kind":"text","text":">("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"+=(_:_:)","roleHeading":"Operator","externalID":"s:SmsE2peoiyyxz_qd__tSTRd__7ElementQyd__ABRtzlFZ::SYNTHESIZED::s:5Scout4PathV","modules":[{"relatedModules":["Swift"],"name":"Scout"}],"extendedModule":"Swift","role":"symbol","symbolKind":"op"},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"RangeReplaceableCollection.+=(_:_:)","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/scout\/path\/+=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"+=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"<"},{"text":"Other","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Other"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"}]}],"kind":"declarations"}],"references":{"doc://Scout/documentation/Scout/Path/RangeReplaceableCollection-Implementations":{"type":"topic","identifier":"doc:\/\/Scout\/documentation\/Scout\/Path\/RangeReplaceableCollection-Implementations","url":"\/documentation\/scout\/path\/rangereplaceablecollection-implementations","abstract":[],"title":"RangeReplaceableCollection Implementations","role":"collectionGroup","kind":"article"},"doc://Scout/documentation/Scout":{"abstract":[{"type":"text","text":"This library aims to make specific formats data values reading and writing simple when the data format is not known at build time."}],"identifier":"doc:\/\/Scout\/documentation\/Scout","url":"\/documentation\/scout","type":"topic","role":"collection","title":"Scout","kind":"symbol"},"doc://Scout/documentation/Scout/Path/+=(_:_:)":{"title":"+=(_:_:)","kind":"symbol","identifier":"doc:\/\/Scout\/documentation\/Scout\/Path\/+=(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"+=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Other","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Other","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/scout\/path\/+=(_:_:)","type":"topic","abstract":[]},"doc://Scout/documentation/Scout/Path":{"navigatorTitle":[{"text":"Path","kind":"identifier"}],"abstract":[{"type":"text","text":"Collection of "},{"isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement","type":"reference"},{"type":"text","text":"s to subscript a "},{"type":"codeVoice","code":"PathExplorer"}],"type":"topic","identifier":"doc:\/\/Scout\/documentation\/Scout\/Path","kind":"symbol","title":"Path","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Path"}],"url":"\/documentation\/scout\/path","role":"symbol"},"doc://Scout/documentation/Scout/PathElement":{"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement","url":"\/documentation\/scout\/pathelement","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathElement","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"PathElement","kind":"identifier"}],"title":"PathElement","abstract":[{"type":"text","text":"The possible elements that can be used to subscript a "},{"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer","isActive":true}],"kind":"symbol","role":"symbol"}}}