{"abstract":[{"text":"Unique identifier of a data format","type":"text"}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/scout\/dataformat"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Scout\/documentation\/Scout"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer","doc:\/\/Scout\/documentation\/Scout\/CodablePathExplorer","doc:\/\/Scout\/documentation\/Scout\/CodableFormat","doc:\/\/Scout\/documentation\/Scout\/CodableFormats","doc:\/\/Scout\/documentation\/Scout\/ExplorerXML","doc:\/\/Scout\/documentation\/Scout\/SerializationError"],"generated":true,"title":"Convert and export explorers"}],"topicSections":[{"identifiers":["doc:\/\/Scout\/documentation\/Scout\/DataFormat\/json","doc:\/\/Scout\/documentation\/Scout\/DataFormat\/plist","doc:\/\/Scout\/documentation\/Scout\/DataFormat\/xml","doc:\/\/Scout\/documentation\/Scout\/DataFormat\/yaml"],"title":"Enumeration Cases"},{"identifiers":["doc:\/\/Scout\/documentation\/Scout\/DataFormat\/init(rawValue:)"],"title":"Initializers"},{"title":"Default Implementations","identifiers":["doc:\/\/Scout\/documentation\/Scout\/DataFormat\/Equatable-Implementations","doc:\/\/Scout\/documentation\/Scout\/DataFormat\/RawRepresentable-Implementations"],"generated":true}],"identifier":{"url":"doc:\/\/Scout\/documentation\/Scout\/DataFormat","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Enumeration","modules":[{"name":"Scout"}],"symbolKind":"enum","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"DataFormat","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"DataFormat"}],"title":"DataFormat","role":"symbol","externalID":"s:5Scout10DataFormatO"},"relationshipsSections":[{"identifiers":["doc:\/\/Scout\/s12CaseIterableP","doc:\/\/Scout\/SQ","doc:\/\/Scout\/SH","doc:\/\/Scout\/SY"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataFormat","kind":"identifier"}]}]}],"references":{"doc://Scout/documentation/Scout/DataFormat/json":{"role":"symbol","title":"DataFormat.json","abstract":[],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"json"}],"kind":"symbol","identifier":"doc:\/\/Scout\/documentation\/Scout\/DataFormat\/json","type":"topic","url":"\/documentation\/scout\/dataformat\/json"},"doc://Scout/documentation/Scout/DataFormat/yaml":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"yaml","kind":"identifier"}],"url":"\/documentation\/scout\/dataformat\/yaml","abstract":[],"identifier":"doc:\/\/Scout\/documentation\/Scout\/DataFormat\/yaml","title":"DataFormat.yaml"},"doc://Scout/documentation/Scout/DataFormat/plist":{"url":"\/documentation\/scout\/dataformat\/plist","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"plist"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/DataFormat\/plist","kind":"symbol","title":"DataFormat.plist","abstract":[],"role":"symbol","type":"topic"},"doc://Scout/documentation/Scout/DataFormat/xml":{"url":"\/documentation\/scout\/dataformat\/xml","type":"topic","title":"DataFormat.xml","identifier":"doc:\/\/Scout\/documentation\/Scout\/DataFormat\/xml","role":"symbol","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"xml","kind":"identifier"}]},"doc://Scout/documentation/Scout/SerializablePathExplorer":{"title":"SerializablePathExplorer","kind":"symbol","url":"\/documentation\/scout\/serializablepathexplorer","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"PathExplorer"},{"type":"text","text":" which can be instantiated from data and export itself to another format"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SerializablePathExplorer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SerializablePathExplorer"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer","type":"topic","role":"symbol"},"doc://Scout/documentation/Scout/SerializationError":{"type":"topic","identifier":"doc:\/\/Scout\/documentation\/Scout\/SerializationError","navigatorTitle":[{"text":"SerializationError","kind":"identifier"}],"url":"\/documentation\/scout\/serializationerror","abstract":[],"title":"SerializationError","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"SerializationError","kind":"identifier"}],"kind":"symbol"},"doc://Scout/SH":{"type":"unresolvable","identifier":"doc:\/\/Scout\/SH","title":"Swift.Hashable"},"doc://Scout/SY":{"type":"unresolvable","identifier":"doc:\/\/Scout\/SY","title":"Swift.RawRepresentable"},"doc://Scout/s12CaseIterableP":{"type":"unresolvable","identifier":"doc:\/\/Scout\/s12CaseIterableP","title":"Swift.CaseIterable"},"doc://Scout/documentation/Scout/DataFormat":{"navigatorTitle":[{"kind":"identifier","text":"DataFormat"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataFormat"}],"title":"DataFormat","abstract":[{"type":"text","text":"Unique identifier of a data format"}],"kind":"symbol","url":"\/documentation\/scout\/dataformat","role":"symbol","identifier":"doc:\/\/Scout\/documentation\/Scout\/DataFormat"},"doc://Scout/documentation/Scout/CodableFormats":{"abstract":[],"identifier":"doc:\/\/Scout\/documentation\/Scout\/CodableFormats","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableFormats"}],"url":"\/documentation\/scout\/codableformats","navigatorTitle":[{"text":"CodableFormats","kind":"identifier"}],"type":"topic","title":"CodableFormats"},"doc://Scout/documentation/Scout/DataFormat/RawRepresentable-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/Scout\/documentation\/Scout\/DataFormat\/RawRepresentable-Implementations","kind":"article","title":"RawRepresentable Implementations","type":"topic","url":"\/documentation\/scout\/dataformat\/rawrepresentable-implementations"},"doc://Scout/documentation/Scout/DataFormat/init(rawValue:)":{"abstract":[],"kind":"symbol","role":"symbol","title":"init(rawValue:)","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"url":"\/documentation\/scout\/dataformat\/init(rawvalue:)","identifier":"doc:\/\/Scout\/documentation\/Scout\/DataFormat\/init(rawValue:)","type":"topic"},"doc://Scout/documentation/Scout":{"abstract":[{"type":"text","text":"This library aims to make specific formats data values reading and writing simple when the data format is not known at build time."}],"identifier":"doc:\/\/Scout\/documentation\/Scout","url":"\/documentation\/scout","type":"topic","role":"collection","title":"Scout","kind":"symbol"},"doc://Scout/documentation/Scout/CodableFormat":{"identifier":"doc:\/\/Scout\/documentation\/Scout\/CodableFormat","url":"\/documentation\/scout\/codableformat","navigatorTitle":[{"text":"CodableFormat","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodableFormat"}],"abstract":[],"role":"symbol","type":"topic","kind":"symbol","title":"CodableFormat"},"doc://Scout/documentation/Scout/CodablePathExplorer":{"kind":"symbol","url":"\/documentation\/scout\/codablepathexplorer","navigatorTitle":[{"text":"CodablePathExplorer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodablePathExplorer","kind":"identifier"}],"abstract":[{"text":"A  concrete implementation of ","type":"text"},{"code":"PathExplorer","type":"codeVoice"},{"type":"text","text":" with a specific "},{"identifier":"doc:\/\/Scout\/documentation\/Scout\/CodableFormat","type":"reference","isActive":true},{"text":".","type":"text"}],"role":"symbol","title":"CodablePathExplorer","identifier":"doc:\/\/Scout\/documentation\/Scout\/CodablePathExplorer","type":"topic"},"doc://Scout/documentation/Scout/DataFormat/Equatable-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","title":"Equatable Implementations","url":"\/documentation\/scout\/dataformat\/equatable-implementations","identifier":"doc:\/\/Scout\/documentation\/Scout\/DataFormat\/Equatable-Implementations","type":"topic"},"doc://Scout/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/Scout\/SQ"},"doc://Scout/documentation/Scout/ExplorerXML":{"title":"ExplorerXML","url":"\/documentation\/scout\/explorerxml","abstract":[],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExplorerXML"}],"navigatorTitle":[{"text":"ExplorerXML","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Scout\/documentation\/Scout\/ExplorerXML"}}}