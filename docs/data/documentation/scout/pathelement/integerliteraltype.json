{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntegerLiteralType"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/scout\/pathelement\/integerliteraltype"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Scout\/documentation\/Scout\/PathElement\/IntegerLiteralType","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ExpressibleByIntegerLiteral.IntegerLiteralType"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"IntegerLiteralType"}],"role":"symbol","title":"PathElement.IntegerLiteralType","roleHeading":"Type Alias","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntegerLiteralType"}],"symbolKind":"typealias","externalID":"s:5Scout11PathElementO18IntegerLiteralTypea","extendedModule":"Scout","modules":[{"name":"Scout"}]},"hierarchy":{"paths":[["doc:\/\/Scout\/documentation\/Scout","doc:\/\/Scout\/documentation\/Scout\/PathElement","doc:\/\/Scout\/documentation\/Scout\/PathElement\/ExpressibleByIntegerLiteral-Implementations"]]},"references":{"doc://Scout/documentation/Scout/PathElement":{"role":"symbol","title":"PathElement","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathElement"}],"abstract":[{"type":"text","text":"The possible elements that can be used to subscript a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PathElement"}],"url":"\/documentation\/scout\/pathelement"},"doc://Scout/documentation/Scout/PathElement/IntegerLiteralType":{"role":"symbol","title":"PathElement.IntegerLiteralType","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntegerLiteralType"}],"abstract":[],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement\/IntegerLiteralType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IntegerLiteralType"}],"url":"\/documentation\/scout\/pathelement\/integerliteraltype"},"doc://Scout/documentation/Scout/PathElement/ExpressibleByIntegerLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByIntegerLiteral Implementations","abstract":[],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement\/ExpressibleByIntegerLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/scout\/pathelement\/expressiblebyintegerliteral-implementations"},"doc://Scout/documentation/Scout/PathExplorer":{"role":"symbol","title":"PathExplorer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathExplorer"}],"abstract":[{"type":"text","text":"Wrap several structs to explore several format: Json, Plist, YAML and Xml"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PathExplorer"}],"url":"\/documentation\/scout\/pathexplorer"},"doc://Scout/documentation/Scout":{"role":"collection","title":"Scout","abstract":[{"type":"text","text":"This library aims to make specific formats data values reading and writing simple when the data format is not known at build time."}],"identifier":"doc:\/\/Scout\/documentation\/Scout","kind":"symbol","type":"topic","url":"\/documentation\/scout"}}}