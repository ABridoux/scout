{"hierarchy":{"paths":[["doc:\/\/Scout\/documentation\/Scout","doc:\/\/Scout\/documentation\/Scout\/PathElement","doc:\/\/Scout\/documentation\/Scout\/PathElement\/ExpressibleByIntegerLiteral-Implementations"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/scout\/pathelement\/integerliteraltype"]}],"identifier":{"url":"doc:\/\/Scout\/documentation\/Scout\/PathElement\/IntegerLiteralType","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"ExpressibleByIntegerLiteral.IntegerLiteralType"},{"type":"text","text":"."}],"metadata":{"roleHeading":"Type Alias","title":"PathElement.IntegerLiteralType","externalID":"s:5Scout11PathElementO18IntegerLiteralTypea","symbolKind":"typealias","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"IntegerLiteralType","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"IntegerLiteralType"}],"extendedModule":"Scout","modules":[{"name":"Scout"}],"role":"symbol"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IntegerLiteralType"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Scout/documentation/Scout/PathElement/ExpressibleByIntegerLiteral-Implementations":{"kind":"article","type":"topic","url":"\/documentation\/scout\/pathelement\/expressiblebyintegerliteral-implementations","role":"collectionGroup","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement\/ExpressibleByIntegerLiteral-Implementations","title":"ExpressibleByIntegerLiteral Implementations","abstract":[]},"doc://Scout/documentation/Scout":{"abstract":[{"type":"text","text":"This library aims to make specific formats data values reading and writing simple when the data format is not known at build time."}],"identifier":"doc:\/\/Scout\/documentation\/Scout","url":"\/documentation\/scout","type":"topic","role":"collection","title":"Scout","kind":"symbol"},"doc://Scout/documentation/Scout/PathExplorer":{"title":"PathExplorer","kind":"symbol","abstract":[{"type":"text","text":"Wrap several structs to explore several format: Json, Plist, YAML and Xml"}],"type":"topic","url":"\/documentation\/scout\/pathexplorer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PathExplorer"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathExplorer","kind":"identifier"}]},"doc://Scout/documentation/Scout/PathElement/IntegerLiteralType":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"IntegerLiteralType"}],"abstract":[],"role":"symbol","kind":"symbol","title":"PathElement.IntegerLiteralType","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"IntegerLiteralType","kind":"identifier"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement\/IntegerLiteralType","url":"\/documentation\/scout\/pathelement\/integerliteraltype"},"doc://Scout/documentation/Scout/PathElement":{"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement","url":"\/documentation\/scout\/pathelement","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathElement","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"PathElement","kind":"identifier"}],"title":"PathElement","abstract":[{"type":"text","text":"The possible elements that can be used to subscript a "},{"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer","isActive":true}],"kind":"symbol","role":"symbol"}}}