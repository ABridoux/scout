{"hierarchy":{"paths":[["doc:\/\/Scout\/documentation\/Scout","doc:\/\/Scout\/documentation\/Scout\/PathElement"]]},"sections":[],"kind":"article","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Scout\/documentation\/Scout\/PathElement\/init(integerLiteral:)"],"generated":true},{"title":"Type Aliases","generated":true,"identifiers":["doc:\/\/Scout\/documentation\/Scout\/PathElement\/IntegerLiteralType"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/scout\/pathelement\/expressiblebyintegerliteral-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Scout\/documentation\/Scout\/PathElement\/ExpressibleByIntegerLiteral-Implementations"},"metadata":{"role":"collectionGroup","modules":[{"name":"Scout"}],"title":"ExpressibleByIntegerLiteral Implementations"},"references":{"doc://Scout/documentation/Scout/PathElement":{"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement","url":"\/documentation\/scout\/pathelement","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathElement","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"PathElement","kind":"identifier"}],"title":"PathElement","abstract":[{"type":"text","text":"The possible elements that can be used to subscript a "},{"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer","isActive":true}],"kind":"symbol","role":"symbol"},"doc://Scout/documentation/Scout/PathElement/init(integerLiteral:)":{"url":"\/documentation\/scout\/pathelement\/init(integerliteral:)","kind":"symbol","title":"init(integerLiteral:)","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement\/init(integerLiteral:)","abstract":[],"type":"topic","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"integerLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}]},"doc://Scout/documentation/Scout/PathElement/IntegerLiteralType":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"IntegerLiteralType"}],"abstract":[],"role":"symbol","kind":"symbol","title":"PathElement.IntegerLiteralType","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"IntegerLiteralType","kind":"identifier"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement\/IntegerLiteralType","url":"\/documentation\/scout\/pathelement\/integerliteraltype"},"doc://Scout/documentation/Scout":{"abstract":[{"type":"text","text":"This library aims to make specific formats data values reading and writing simple when the data format is not known at build time."}],"identifier":"doc:\/\/Scout\/documentation\/Scout","url":"\/documentation\/scout","type":"topic","role":"collection","title":"Scout","kind":"symbol"},"doc://Scout/documentation/Scout/PathExplorer":{"title":"PathExplorer","kind":"symbol","abstract":[{"type":"text","text":"Wrap several structs to explore several format: Json, Plist, YAML and Xml"}],"type":"topic","url":"\/documentation\/scout\/pathexplorer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PathExplorer"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathExplorer","kind":"identifier"}]}}}