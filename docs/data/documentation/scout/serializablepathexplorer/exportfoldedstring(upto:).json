{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"exportFoldedString"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":" "},{"kind":"internalParam","text":"level"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To be used only for display purpose as the returned string will not have a proper format"}]}]},{"anchor":"Examples","level":3,"type":"heading","text":"Examples"},{"type":"paragraph","inlineContent":[{"type":"text","text":"With the following JSON stored in a "},{"type":"codeVoice","code":"SerializablePathExplorer"},{"type":"text","text":" named "},{"type":"codeVoice","code":"json"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"json","code":["{","  \"Tom\" : {","    \"age\" : 68,","    \"hobbies\" : [","      \"cooking\",","      \"guitar\"","    ],","    \"height\" : 175","  },","  \"Robert\" : {","    \"age\" : 23,","    \"hobbies\" : [","      \"video games\",","      \"party\",","      \"tennis\"","    ],","    \"running_records\" : [","      [","        10,","        12,","        9,","        10","      ],","      [","        9,","        12,","        11","      ]","    ],","    \"height\" : 181","  },","  \"Suzanne\" : {","    \"job\" : \"actress\",","    \"movies\" : [","      {","        \"title\" : \"Tomorrow is so far\",","        \"awards\" : \"Best speech for a silent movie\"","      },","      {","        \"title\" : \"Yesterday will never go\",","        \"awards\" : \"Best title\"","      },","      {","        \"title\" : \"What about today?\"","      }","    ]","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following"}]},{"type":"codeListing","syntax":"swift","code":["json.exportFoldedString(upTo: 2)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"will return the string:"}]},{"type":"codeListing","syntax":"json","code":["{","  \"Suzanne\" : {","    \"job\" : \"actress\",","    \"movies\" : [...]","  },","  \"Tom\" : {","    \"hobbies\" : [...],","    \"age\" : 68,","    \"height\" : 175","  },","  \"Robert\" : {","    \"running_records\" : [...],","    \"age\" : 23,","    \"hobbies\" : [...],","    \"height\" : 181","  }","}"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/scout\/serializablepathexplorer\/exportfoldedstring(upto:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer\/exportFoldedString(upTo:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Folded explored description, replacing the group values (array or dictionaries) sub values by a single string “…”"}],"kind":"symbol","metadata":{"role":"symbol","title":"exportFoldedString(upTo:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"exportFoldedString"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"symbolKind":"method","externalID":"s:5Scout24SerializablePathExplorerP18exportFoldedString4upToSSSi_tKF","required":true,"modules":[{"name":"Scout"}]},"hierarchy":{"paths":[["doc:\/\/Scout\/documentation\/Scout","doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer"]]},"seeAlsoSections":[{"title":"Export folded String","identifiers":["doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer\/folded(upTo:)"],"generated":true}],"references":{"doc://Scout/documentation/Scout/SerializablePathExplorer":{"role":"symbol","title":"SerializablePathExplorer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerializablePathExplorer"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"PathExplorer"},{"type":"text","text":" which can be instantiated from data and export itself to another format"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SerializablePathExplorer"}],"url":"\/documentation\/scout\/serializablepathexplorer"},"doc://Scout/documentation/Scout/SerializablePathExplorer/exportFoldedString(upTo:)":{"role":"symbol","title":"exportFoldedString(upTo:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"exportFoldedString"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Folded explored description, replacing the group values (array or dictionaries) sub values by a single string “…”"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer\/exportFoldedString(upTo:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/scout\/serializablepathexplorer\/exportfoldedstring(upto:)"},"doc://Scout/documentation/Scout":{"role":"collection","title":"Scout","abstract":[{"type":"text","text":"This library aims to make specific formats data values reading and writing simple when the data format is not known at build time."}],"identifier":"doc:\/\/Scout\/documentation\/Scout","kind":"symbol","type":"topic","url":"\/documentation\/scout"},"doc://Scout/documentation/Scout/SerializablePathExplorer/folded(upTo:)":{"role":"symbol","title":"folded(upTo:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"folded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"New explorer replacing the group values (array or dictionaries) sub values by a unique one"},{"type":"text","text":" "},{"type":"text","text":"holding a fold mark to be replaced when exporting the string value."}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer\/folded(upTo:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/scout\/serializablepathexplorer\/folded(upto:)"}}}