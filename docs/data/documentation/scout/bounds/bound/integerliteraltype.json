{"variants":[{"paths":["\/documentation\/scout\/bounds\/bound\/integerliteraltype"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ExpressibleByIntegerLiteral.IntegerLiteralType"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"IntegerLiteralType","kind":"identifier"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/Scout\/documentation\/Scout","doc:\/\/Scout\/documentation\/Scout\/Bounds","doc:\/\/Scout\/documentation\/Scout\/Bounds\/Bound"]]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/Scout\/documentation\/Scout\/Bounds\/Bound\/IntegerLiteralType","interfaceLanguage":"swift"},"metadata":{"navigatorTitle":[{"text":"IntegerLiteralType","kind":"identifier"}],"roleHeading":"Type Alias","externalID":"s:5Scout6BoundsV5BoundV18IntegerLiteralTypea","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"IntegerLiteralType","kind":"identifier"}],"role":"symbol","modules":[{"name":"Scout"}],"title":"Bounds.Bound.IntegerLiteralType","symbolKind":"typealias"},"references":{"doc://Scout/documentation/Scout/Bounds/Bound":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bound"}],"kind":"symbol","title":"Bounds.Bound","abstract":[],"identifier":"doc:\/\/Scout\/documentation\/Scout\/Bounds\/Bound","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Bound"}],"url":"\/documentation\/scout\/bounds\/bound","role":"symbol"},"doc://Scout/documentation/Scout":{"abstract":[{"type":"text","text":"This library aims to make specific formats data values reading and writing simple when the data format is not known at build time."}],"identifier":"doc:\/\/Scout\/documentation\/Scout","url":"\/documentation\/scout","type":"topic","role":"collection","title":"Scout","kind":"symbol"},"doc://Scout/documentation/Scout/Bounds":{"abstract":[{"type":"text","text":"Lower and upper bounds to be used to slice an array"}],"type":"topic","url":"\/documentation\/scout\/bounds","role":"symbol","kind":"symbol","identifier":"doc:\/\/Scout\/documentation\/Scout\/Bounds","title":"Bounds","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Bounds"}],"navigatorTitle":[{"kind":"identifier","text":"Bounds"}]},"doc://Scout/documentation/Scout/Bounds/Bound/IntegerLiteralType":{"abstract":[],"kind":"symbol","role":"symbol","title":"Bounds.Bound.IntegerLiteralType","navigatorTitle":[{"text":"IntegerLiteralType","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntegerLiteralType"}],"url":"\/documentation\/scout\/bounds\/bound\/integerliteraltype","identifier":"doc:\/\/Scout\/documentation\/Scout\/Bounds\/Bound\/IntegerLiteralType","type":"topic"}}}