{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/scout\/pathsfilter\/expressionpredicate\/init(format:)"]}],"hierarchy":{"paths":[["doc:\/\/Scout\/documentation\/Scout","doc:\/\/Scout\/documentation\/Scout\/PathsFilter","doc:\/\/Scout\/documentation\/Scout\/PathsFilter\/ExpressionPredicate"]]},"kind":"symbol","metadata":{"title":"init(format:)","roleHeading":"Initializer","role":"symbol","externalID":"s:5Scout11PathsFilterO19ExpressionPredicateC6formatAESS_tKcfc","modules":[{"name":"Scout"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"format","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"symbolKind":"init"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Scout\/documentation\/Scout\/PathsFilter\/ExpressionPredicate\/init(format:)"},"abstract":[{"type":"text","text":"Specify a predicate with a ‘value’ variable that will be replaced with a concrete value during evaluation"}],"references":{"doc://Scout/documentation/Scout/PathsFilter":{"type":"topic","url":"\/documentation\/scout\/pathsfilter","abstract":[{"text":"Provided to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer\/listPaths(startingAt:filter:)-4tkeq","isActive":true},{"type":"text","text":" function to target specific paths when listing them."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathsFilter","title":"PathsFilter","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PathsFilter","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"PathsFilter"}]},"doc://Scout/documentation/Scout/PathsFilter/ExpressionPredicate":{"title":"PathsFilter.ExpressionPredicate","role":"symbol","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathsFilter\/ExpressionPredicate","abstract":[{"type":"text","text":"Specify a "},{"type":"codeVoice","code":"String"},{"text":" boolean expression to filter the value","type":"text"}],"url":"\/documentation\/scout\/pathsfilter\/expressionpredicate","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExpressionPredicate"}],"navigatorTitle":[{"text":"ExpressionPredicate","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://Scout/documentation/Scout/PathsFilter/ExpressionPredicate/init(format:)":{"title":"init(format:)","role":"symbol","abstract":[{"type":"text","text":"Specify a predicate with a ‘value’ variable that will be replaced with a concrete value during evaluation"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathsFilter\/ExpressionPredicate\/init(format:)","url":"\/documentation\/scout\/pathsfilter\/expressionpredicate\/init(format:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"format","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"type":"topic","kind":"symbol"},"doc://Scout/documentation/Scout/PathExplorer/listPaths(startingAt:filter:)-4tkeq":{"abstract":[{"text":"Returns all the paths leading to single or group values","type":"text"}],"type":"topic","url":"\/documentation\/scout\/pathexplorer\/listpaths(startingat:filter:)-4tkeq","role":"symbol","kind":"symbol","required":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer\/listPaths(startingAt:filter:)-4tkeq","title":"listPaths(startingAt:filter:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"listPaths","kind":"identifier"},{"kind":"text","text":"("},{"text":"startingAt","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Scout4PathV","text":"Path"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"filter"},{"kind":"text","text":": "},{"text":"PathsFilter","kind":"typeIdentifier","preciseIdentifier":"s:5Scout11PathsFilterO"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:5Scout4PathV","text":"Path"},{"kind":"text","text":"]"}],"defaultImplementations":1},"doc://Scout/documentation/Scout":{"abstract":[{"type":"text","text":"This library aims to make specific formats data values reading and writing simple when the data format is not known at build time."}],"identifier":"doc:\/\/Scout\/documentation\/Scout","url":"\/documentation\/scout","type":"topic","role":"collection","title":"Scout","kind":"symbol"}}}