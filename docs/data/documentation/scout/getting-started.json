{"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/Scout\/documentation\/Scout\/getting-started","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"inlineContent":[{"type":"text","text":"Scout uses types conforming to the protocols "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer"},{"text":" to read and manipulate data. If it’s possible to define your own types conforming to those protocols, it’s also possible to use default implementations if they suit your needs. Those explorers can be found in ","type":"text"},{"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorers","type":"reference","isActive":true},{"type":"text","text":" and will be used for the examples in this article."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The provided examples will reference this “People” file (here as YAML)."}],"type":"paragraph"},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"The full “People” files are used to try Scout and can be found in the Playground folder.","type":"text"}]}]},{"code":["Robert:","  age: 23","  height: 181","  hobbies:","  - video games","  - party","  - tennis","Suzanne:","  job: actress","  movies:","  - awards: Best speech for a silent movie","    title: Tomorrow is so far","  - awards: Best title","    title: Yesterday will never go","  - title: What about today?","Tom:","  age: 68","  height: 175","  hobbies:","  - cooking","  - guitar"],"syntax":"yaml","type":"codeListing"},{"text":"Create a PathExplorer","type":"heading","level":2,"anchor":"Create-a-PathExplorer"},{"inlineContent":[{"type":"text","text":"The simplest way to read data in any of the supported format is to use one of the "},{"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorers","isActive":true,"type":"reference"},{"type":"text","text":" implementation and to call "},{"isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer\/init(data:)","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, let’s imagine that the file is read and converted to a "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" value. Here’s how to make an explorer for the YAML format."}]},{"code":["let yaml = try PathExplorers.Yaml(data: data)"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Similarly, if the format was Plist:","type":"text"}]},{"code":["let plist = try PathExplorers.Plist(data: data)"],"type":"codeListing","syntax":"swift"},{"type":"heading","anchor":"Navigate-through-data","level":2,"text":"Navigate through data"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s then possible to use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer\/get(_:)-2ghf1"},{"type":"text","text":" method to read the “height” value in the “Tom” dictionary."}]},{"type":"codeListing","syntax":"swift","code":["let tomHeightYaml = try yaml.get(\"Tom\", \"height\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will return a new "},{"code":"PathExplorers.Yaml","type":"codeVoice"},{"type":"text","text":". That’s the logic of Scout: when reading, setting, deleting or adding values in a "},{"code":"PathExplorer","type":"codeVoice"},{"text":", the returned value will be another ","type":"text"},{"code":"PathExplorer","type":"codeVoice"},{"type":"text","text":". This allows to keep performing operation easily. When the explorer has the right value, use one of the several options to access its value. For instance here to get Tom’s height as a "},{"type":"codeVoice","code":"Double"}]},{"type":"codeListing","syntax":"swift","code":["let tomHeight = tomHeightYaml.double","\/\/ tomHeight: Double?"]},{"inlineContent":[{"text":"More concisely, if you are only interested into getting Tom’s height, you could write","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let tomHeight = try yaml.get(\"Tom\", \"height\").double"]},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"As you might have noticed, calling "},{"code":"get()","type":"codeVoice"},{"type":"text","text":" can throw an error. This is the case for most "},{"type":"codeVoice","code":"PathExplorer"},{"type":"text","text":" functions. Whenever an element in the provided path does not exist, for instance an index out of bounds, or a missing key, a relevant error will be thrown."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As a last example, here’s how to read Robert first hobby inside an array:"}]},{"syntax":"swift","type":"codeListing","code":["let robertFirstHobby = try yaml.get(\"Robert\", \"hobbies\", 0)"]},{"content":[{"inlineContent":[{"text":"Use negative indexes to specify an index from the ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"end","type":"text"}]},{"type":"text","text":" of the array."}],"type":"paragraph"}],"name":"Tip","type":"aside","style":"tip"},{"inlineContent":[{"text":"To lean more about ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/Path"},{"type":"text","text":"s and how they can help you targeting specific pieces of data, you can read "},{"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/mastering-paths","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"type":"heading","level":2,"text":"Manipulate data","anchor":"Manipulate-data"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using the same logic, it’s possible to set, delete or add values."}]},{"inlineContent":[{"type":"text","text":"For instance, to set Robert’s age to 45 with the "},{"isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer\/set(_:to:)-9d877","type":"reference"},{"type":"text","text":" function:"}],"type":"paragraph"},{"type":"codeListing","code":["var yaml = try PathExplorers.Yaml(data: data)","try yaml.set(\"Robert\", \"age\", to: 45)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Or to add a new key named “score” with a value of 25 to Tom’s dictionary with the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer\/add(_:at:)-2kii6"},{"type":"text","text":" function:"}]},{"code":["var yaml = try PathExplorers.Yaml(data: data)","try yaml.add(25, at: \"Tom\", \"score\")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Those modifications all have specificities, like the “delete” one that can also delete an array or dictionary when left empty. To get more information about those features, please refer to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"Also, it’s worth mentioning that there are counterparts of those functions that will rather return a modified copy of the explorer. This is useful to chain operations."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, to set Tom’s height to 160, add a new surname key to Robert’s dictionary and remove Suzanne second movie:"}]},{"code":["let yaml = try PathExplorers.Yaml(data: data)","let result = yaml","    .setting(\"Tom\", \"height\", to: 160)","    .adding(\"Bob\", to: \"Robert\", \"surname\")","    .deleting(\"Suzanne\", \"movies\", 1)"],"syntax":"swift","type":"codeListing"},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using plain strings, numbers and booleans is made possible because "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement"},{"text":" implements ","type":"text"},{"type":"codeVoice","code":"ExpressibleByStringLiteral"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ExpressibleByIntLiteral"},{"text":".","type":"text"}]}]},{"text":"Export the results","anchor":"Export-the-results","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer","isActive":true},{"text":" is used to navigate through data, the protocol ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer"},{"type":"text","text":" refines it to offer import and export options."}]},{"inlineContent":[{"type":"text","text":"Once you are satisfied with the resulting "},{"type":"codeVoice","code":"SerializablePathExplorer"},{"type":"text","text":" - regardless of the operations you performed - it’s possible to export the explorer as a "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" value or to another format."},{"type":"text","text":" "},{"type":"text","text":"To export it to a "},{"type":"codeVoice","code":"Data"},{"text":" value, use ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer\/exportData()"},{"type":"text","text":" function."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"When needed, it’s possible to specify another format when exporting: for instance, if a plist was decoded from a file and has to be converted to a JSON format. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer\/exportData(to:)","isActive":true},{"text":" for more informations.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similarly, other export features are available like export to a "},{"code":"String","type":"codeVoice"},{"type":"text","text":" or to a CSV string."}]}]}],"hierarchy":{"paths":[["doc:\/\/Scout\/documentation\/Scout"]]},"abstract":[{"text":"Quickly learn how to use Scout’s features.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/scout\/getting-started"]}],"metadata":{"roleHeading":"Article","title":"Getting started with Scout","role":"article","modules":[{"name":"Scout"}]},"seeAlsoSections":[{"title":"Essential","identifiers":["doc:\/\/Scout\/documentation\/Scout\/PathExplorer","doc:\/\/Scout\/documentation\/Scout\/Path"],"generated":true}],"kind":"article","sections":[],"references":{"doc://Scout/documentation/Scout/PathExplorer/add(_:at:)-2kii6":{"type":"topic","url":"\/documentation\/scout\/pathexplorer\/add(_:at:)-2kii6","role":"symbol","abstract":[{"type":"text","text":"Add a value at the given path."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ExplorerValue","kind":"typeIdentifier","preciseIdentifier":"s:5Scout13ExplorerValueO"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"text":"PathElement","preciseIdentifier":"s:5Scout11PathElementO","kind":"typeIdentifier"},{"kind":"text","text":"...) "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer\/add(_:at:)-2kii6","title":"add(_:at:)","kind":"symbol"},"doc://Scout/documentation/Scout/mastering-paths":{"type":"topic","url":"\/documentation\/scout\/mastering-paths","abstract":[{"identifier":"doc:\/\/Scout\/documentation\/Scout\/Path","type":"reference","isActive":true},{"type":"text","text":"s are provided to a "},{"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer","isActive":true,"type":"reference"},{"text":" to navigate through or manipulate data precisely.","type":"text"}],"role":"article","kind":"article","identifier":"doc:\/\/Scout\/documentation\/Scout\/mastering-paths","title":"Mastering Paths"},"doc://Scout/documentation/Scout/PathExplorers":{"abstract":[{"type":"text","text":"Namespace to find all default PathExplorers in a single place"}],"url":"\/documentation\/scout\/pathexplorers","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PathExplorers"}],"title":"PathExplorers","navigatorTitle":[{"kind":"identifier","text":"PathExplorers"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorers"},"doc://Scout/documentation/Scout/PathExplorer/get(_:)-2ghf1":{"title":"get(_:)","url":"\/documentation\/scout\/pathexplorer\/get(_:)-2ghf1","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","preciseIdentifier":"s:5Scout11PathElementO","text":"PathElement"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Get the key at the given path"}],"type":"topic","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer\/get(_:)-2ghf1","kind":"symbol"},"doc://Scout/documentation/Scout":{"abstract":[{"type":"text","text":"This library aims to make specific formats data values reading and writing simple when the data format is not known at build time."}],"identifier":"doc:\/\/Scout\/documentation\/Scout","url":"\/documentation\/scout","type":"topic","role":"collection","title":"Scout","kind":"symbol"},"doc://Scout/documentation/Scout/PathElement":{"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement","url":"\/documentation\/scout\/pathelement","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathElement","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"PathElement","kind":"identifier"}],"title":"PathElement","abstract":[{"type":"text","text":"The possible elements that can be used to subscript a "},{"type":"reference","identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer","isActive":true}],"kind":"symbol","role":"symbol"},"doc://Scout/documentation/Scout/PathExplorer/set(_:to:)-9d877":{"abstract":[{"text":"Set the value of the key at the given path","type":"text"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer\/set(_:to:)-9d877","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:5Scout11PathElementO","text":"PathElement","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Scout13ExplorerValueO","text":"ExplorerValue"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/scout\/pathexplorer\/set(_:to:)-9d877","type":"topic","title":"set(_:to:)"},"doc://Scout/documentation/Scout/PathExplorer":{"title":"PathExplorer","kind":"symbol","abstract":[{"type":"text","text":"Wrap several structs to explore several format: Json, Plist, YAML and Xml"}],"type":"topic","url":"\/documentation\/scout\/pathexplorer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PathExplorer"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathExplorer","kind":"identifier"}]},"doc://Scout/documentation/Scout/SerializablePathExplorer/init(data:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer\/init(data:)","kind":"symbol","title":"init(data:)","abstract":[{"text":"Initialize a new ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathExplorer"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"Data"}],"required":true,"url":"\/documentation\/scout\/serializablepathexplorer\/init(data:)","role":"symbol","type":"topic"},"doc://Scout/documentation/Scout/SerializablePathExplorer":{"title":"SerializablePathExplorer","kind":"symbol","url":"\/documentation\/scout\/serializablepathexplorer","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"PathExplorer"},{"type":"text","text":" which can be instantiated from data and export itself to another format"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SerializablePathExplorer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SerializablePathExplorer"}],"identifier":"doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer","type":"topic","role":"symbol"},"doc://Scout/documentation/Scout/Path":{"navigatorTitle":[{"text":"Path","kind":"identifier"}],"abstract":[{"type":"text","text":"Collection of "},{"isActive":true,"identifier":"doc:\/\/Scout\/documentation\/Scout\/PathElement","type":"reference"},{"type":"text","text":"s to subscript a "},{"type":"codeVoice","code":"PathExplorer"}],"type":"topic","identifier":"doc:\/\/Scout\/documentation\/Scout\/Path","kind":"symbol","title":"Path","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Path"}],"url":"\/documentation\/scout\/path","role":"symbol"},"doc://Scout/documentation/Scout/SerializablePathExplorer/exportData(to:)":{"identifier":"doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer\/exportData(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"exportData"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Scout10DataFormatO","text":"DataFormat","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"}],"type":"topic","abstract":[{"text":"Export the path explorer value to the specified format data","type":"text"}],"url":"\/documentation\/scout\/serializablepathexplorer\/exportdata(to:)","role":"symbol","title":"exportData(to:)","kind":"symbol"},"doc://Scout/documentation/Scout/SerializablePathExplorer/exportData()":{"identifier":"doc:\/\/Scout\/documentation\/Scout\/SerializablePathExplorer\/exportData()","required":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"exportData","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"}],"abstract":[{"text":"Export the path explorer value to data","type":"text"}],"url":"\/documentation\/scout\/serializablepathexplorer\/exportdata()","role":"symbol","kind":"symbol","title":"exportData()"}}}